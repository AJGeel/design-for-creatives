// Arthur Geel, 02-11-2018.
// Dynamic score visualisation based on trigonometric functions. To be used in the 'Goose Game' concept for Eindhoven Museum.
// Trigonometric functions are inspired by the work of A. Miller: https://goo.gl/kjftAa
// 
// Instructions: press 'UP' and 'DOWN' to change the Red Team's Score
//               press 'LEFT' and 'RIGHT' to change the Blue Team's Score
//               press 'A' and 'E' to change the animation speed

int RED_SCORE = 10;
int BLUE_SCORE = 10;
float t;
int offset = 5000;
float deltaT = .3;

void setup() {
  background(20);
  //size(1200, 500);
  fullScreen();
  noCursor();
  textAlign(CENTER);
  strokeCap(ROUND);
}

void draw() {

  background(20);
  strokeWeight(3.5);
  smooth();

  translate(width/4, height/2);

  for (int i = 0; i < RED_SCORE; i++) {
    strokeWeight(2+i/5);
    stroke(255, 60+i*3, 60+i*5);
    line(x1(t + i), y1(t + i), x2(t + i), y2(t + i));
  }

  redTeamScoreText();  

  translate(2*width/4, 0);
  for (int i = 0; i < BLUE_SCORE; i++) {
    strokeWeight(2+i/5);
    stroke(60+i*5, 60+i*3, 255);
    line(x3(t + i), y3(t + i), x4(t + i), y4(t + i));
  }

  blueTeamScoreText();

  t += deltaT;
}

float x1(float t) {
  return sin(t/10) * 100 + sin(t/6) * 20;
}

float y1(float t) {
  return cos(t/10) * 100;
}

float x2(float t) {
  return sin(t/10) * 200 + sin(t) * 2;
}

float y2(float t) {
  return cos(t/20) * 100 + cos(t/12) * 20;
}

float x3(float t) {
  return sin((t/10)+offset) * 100 + sin(t/6) * 20;
}

float y3(float t) {
  return cos((t/10)+offset) * 100;
}

float x4(float t) {
  return sin((t/10)+offset) * 200 + sin(t) * 2;
}

float y4(float t) {
  return cos((t/20)+offset) * 100 + cos(t/12) * 20;
}


void keyPressed() {
  if (key == CODED) {
    if (keyCode == UP) {
      RED_SCORE += 1;
    } else if (keyCode == DOWN) {
      if (RED_SCORE > 0) {
        RED_SCORE -= 1;
      }
    } else if (keyCode == RIGHT) {
      BLUE_SCORE += 1;
    } else if (keyCode == LEFT) {
      if (BLUE_SCORE > 0) {
        BLUE_SCORE -= 1;
      }
    }
  } else if (key == 'a') {
    deltaT += .1;
  } else if (key == 's') {
    deltaT -= .1;
  }
}

void redTeamScoreText() {
  fill(255);
  textSize(16);
  text("Red Team:", 0, 200);
  textSize(16);
  fill(255, 60, 60);
  text(RED_SCORE, 0, 225);
}

void blueTeamScoreText() {
  fill(255);
  textSize(16);
  text("Blue Team:", 0, 200);
  textSize(16);
  fill(60, 60, 255);
  text(BLUE_SCORE, 0, 225);
}
